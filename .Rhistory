Varname=colnames(sim.otu.tab[[1]])
Conname=colnames(sim.otu.tab[[2]])[-ncol(sim.otu.tab[[2]])]
IDname='subjid'
Tname='time'
resultZIP=tryCatch({
ARZIMM(Varname = Varname,Conname = Conname,fdata = fdata,IDname = IDname,Tname = Tname,bootpara=list(bootpval=F,nboot=500))
}, error = function(e) {
time
})
table(as.vector(resultZIP$nwtable!=0),as.vector(paralist$betaMM!=0))
tmp=c(50,20,20,1,1,1)
#if(tmp[6]==0.01) {effss=0.1;effs=0.1}else if(tmp[6]==0.1) {effss=0.1;effs=1}else if (tmp[6]==1) {effss=1;effs=1}
pac <- c("survival","plyr","ggplot2","reshape2","phyloseq",'stringr','dplyr','tibble','R.utils')#,"dummies"
invisible(lapply(pac, library, character.only = T))
library(ARZIMM)
source('Code/ARZIMM_sim.R')
paralist=myparaset(tmp,"C:/Users/lh1790/OneDrive - NYU Langone Health/Li/ARZIMM")
setwd('C:/Users/lh1790/Box Sync/Li/ARZIMM/')
source('Code/ARZIMM_sim.R')
source('C:/Users/lh1790/OneDrive - NYU Langone Health/Li/ARZIMM/Code/ARZIMM_sim.R')
paralist=myparaset(tmp,"C:/Users/lh1790/OneDrive - NYU Langone Health/Li/ARZIMM")
sim.otu.tab=simMixTime(baseFdataN2M=paralist$baseFdataN2M,conFdataN2L=paralist$conFdataN2L,timeN=paralist$timeN,
interceptM=paralist$interceptM,betaMM=paralist$betaMM,gammaLM=paralist$gammaLM,
sigmaM=paralist$sigmaM,biN2M=paralist$biN2M)
fdata=cbind(sim.otu.tab[[1]],sim.otu.tab[[2]],subjid=sim.otu.tab[[3]])
# fdata.store=fdata
# fdata=fdata.store
Varname=colnames(sim.otu.tab[[1]])
Conname=colnames(sim.otu.tab[[2]])[-ncol(sim.otu.tab[[2]])]
IDname='subjid'
Tname='time'
resultZIP=tryCatch({
ARZIMM(Varname = Varname,Conname = Conname,fdata = fdata,IDname = IDname,Tname = Tname,bootpara=list(bootpval=F,nboot=500))
}, error = function(e) {
time
})
table(as.vector(resultZIP$nwtable!=0),as.vector(paralist$betaMM!=0))
resultZIP
resultZIP=tryCatch({
ARZIMM(Varname = Varname,Conname = Conname,fdata = fdata,IDname = IDname,Tname = Tname,bootpara=list(bootpval=F,nboot=500))
}, error = function(e) {
time
})
ARZIMM(Varname = Varname,Conname = Conname,fdata = fdata,IDname = IDname,Tname = Tname,bootpara=list(bootpval=F,nboot=500))
#if(tmp[6]==0.01) {effss=0.1;effs=0.1}else if(tmp[6]==0.1) {effss=0.1;effs=1}else if (tmp[6]==1) {effss=1;effs=1}
pac <- c("survival","plyr","ggplot2","reshape2","phyloseq",'stringr','dplyr','tibble','R.utils')#,"dummies"
invisible(lapply(pac, library, character.only = T))
resultZIP=tryCatch({
ARZIMM(Varname = Varname,Conname = Conname,fdata = fdata,IDname = IDname,Tname = Tname,bootpara=list(bootpval=F,nboot=500))
}, error = function(e) {
time
})
ARZIMM(Varname = Varname,Conname = Conname,fdata = fdata,IDname = IDname,Tname = Tname,bootpara=list(bootpval=F,nboot=500))
library(devtools)
document()
ARZIMM(Varname = Varname,Conname = Conname,fdata = fdata,IDname = IDname,Tname = Tname,bootpara=list(bootpval=F,nboot=500))
install('ARZIMM')
install('.')
library(ARZIMM)
resultZIP=tryCatch({
ARZIMM(Varname = Varname,Conname = Conname,fdata = fdata,IDname = IDname,Tname = Tname,bootpara=list(bootpval=F,nboot=500))
}, error = function(e) {
time
})
ARZIMM(Varname = Varname,Conname = Conname,fdata = fdata,IDname = IDname,Tname = Tname,bootpara=list(bootpval=F,nboot=500))
document()
document()
install('.')
library(ARZIMM)
resultZIP=tryCatch({
ARZIMM(Varname = Varname,Conname = Conname,fdata = fdata,IDname = IDname,Tname = Tname,bootpara=list(bootpval=F,nboot=500))
}, error = function(e) {
time
})
ARZIMM(Varname = Varname,Conname = Conname,fdata = fdata,IDname = IDname,Tname = Tname,bootpara=list(bootpval=F,nboot=500))
document()
install('.')
library(ARZIMM)
resultZIP=tryCatch({
ARZIMM(Varname = Varname,Conname = Conname,fdata = fdata,IDname = IDname,Tname = Tname,bootpara=list(bootpval=F,nboot=500))
}, error = function(e) {
time
})
table(as.vector(resultZIP$nwtable!=0),as.vector(paralist$betaMM!=0))
resultZIP$nwtable
wpw="C:/Users/lh1790/OneDrive - NYU Langone Health/Li/ARZIMM"
load(paste0(wpw,"/Data/BLsub50m20.RData"))
interceptM=interceptM-2
interceptM
interceptM[c(3,9,10,13,14)]=interceptM[c(3,9,10,13,14)]-2
set.seed(seed)
########## Microbiome random effect sigma
sigmaM=10^((interceptM-9)/6-2)
########## individual random intercept
biN2M=sapply(sigmaM, function(x) rnorm(N2,0,x))
interceptM
##### number of individuals
N2=tmp[1] # 20; 50
##### number of time points
timeN=tmp[2] # 10; 20
##### number of Microbiome
M=tmp[3] # 20; 50
##### has mix effect or not
mixeff=tmp[4] #1; 0
##### zero inflation proportion
zeropro=tmp[5] #0.3; 0.6; 0
##### effect size scale
effss=tmp[6]
##### informative interaction proportion
ineffpro=.05
set.seed(seed)
########## Microbiome random effect sigma
sigmaM=10^((interceptM-9)/6-2)
########## individual random intercept
biN2M=sapply(sigmaM, function(x) rnorm(N2,0,x))
########## zero inflation
ziprop=1/(1+exp(-(cbind(1,conFdataN2L) %*% gammaLM)))
ziprop[,which(colSums(gammaLM)==0)]=0
uN2M=outer(1:N2,1:M,function(x,y) {
foo=function(x,y) rbinom(1,1,ziprop[x,y])
mapply(foo, x,y)
})
baseFdataN2M=outer(1:N2,1:M,function(x,y) {
foo=function(x,y) rpois(1,exp(interceptM[y]+biN2M[x,y]))*(1-uN2M[x,y])
mapply(foo, x, y)
})
rownames(baseFdataN2M)=paste0('subj',str_pad(1:N2, 2, pad = "0"))
colnames(baseFdataN2M)=paste0('M',c(1:M))
########## interaction matrix
betaMM=rep(0,M*M)
intind=c(223, 339,  39, 140, 342,
250, 102,  37, 314, 120,
111, 138, 320, 230, 332,
396, 370,  20,  10, 382)#sample(1:M^2,ineffpro*M*M,replace = F)
effectsize=c(0.188235605, 0.234132241, 0.41366703, 0.61070656, 0.10591708,
0.04580601, 0.82368206, 0.35504387, 1.23225201, 0.90013089,
0.06018784, 0.52154596, 0.99354102, 0.14859757, 0.105828898,
0.37905519, 0.08377116, 0.88736514, 0.70141201, 0.31951335)#10^rnorm(ineffpro*M*M,-.5,.5)
direction=c(1,  1,  1,  1,  1,
1, -1, -1,  1,  1,
-1, -1, -1, -1, -1,
-1, -1, -1,  1,  1)#sample(rep(c(1,-1),ineffpro*M*M/2),replace = F)
betaMM[intind]=effectsize*direction
betaMM=matrix(betaMM,ncol = M,dimnames = list(paste0('M',c(1:M)),paste0('M',c(1:M))))
paralist=list(baseFdataN2M=baseFdataN2M,conFdataN2L=conFdataN2L,timeN=timeN,
interceptM=interceptM,betaMM=betaMM,gammaLM=gammaLM,sigmaM=sigmaM,biN2M=biN2M)
sim.otu.tab=simMixTime(baseFdataN2M=paralist$baseFdataN2M,conFdataN2L=paralist$conFdataN2L,timeN=paralist$timeN,
interceptM=paralist$interceptM,betaMM=paralist$betaMM,gammaLM=paralist$gammaLM,
sigmaM=paralist$sigmaM,biN2M=paralist$biN2M)
fdata=cbind(sim.otu.tab[[1]],sim.otu.tab[[2]],subjid=sim.otu.tab[[3]])
# fdata.store=fdata
# fdata=fdata.store
Varname=colnames(sim.otu.tab[[1]])
Conname=colnames(sim.otu.tab[[2]])[-ncol(sim.otu.tab[[2]])]
IDname='subjid'
Tname='time'
resultZIP=tryCatch({
ARZIMM(Varname = Varname,Conname = Conname,fdata = fdata,IDname = IDname,Tname = Tname,bootpara=list(bootpval=F,nboot=500))
}, error = function(e) {
time
})
table(as.vector(resultZIP$nwtable!=0),as.vector(paralist$betaMM!=0))
resultZIP$nwtable
interceptM
interceptM[c(1,6,10,14,19)]=interceptM[c(1,6,10,14,19)]-1
set.seed(seed)
########## Microbiome random effect sigma
sigmaM=10^((interceptM-9)/6-2)
########## individual random intercept
biN2M=sapply(sigmaM, function(x) rnorm(N2,0,x))
########## zero inflation
ziprop=1/(1+exp(-(cbind(1,conFdataN2L) %*% gammaLM)))
ziprop[,which(colSums(gammaLM)==0)]=0
uN2M=outer(1:N2,1:M,function(x,y) {
foo=function(x,y) rbinom(1,1,ziprop[x,y])
mapply(foo, x,y)
})
baseFdataN2M=outer(1:N2,1:M,function(x,y) {
foo=function(x,y) rpois(1,exp(interceptM[y]+biN2M[x,y]))*(1-uN2M[x,y])
mapply(foo, x, y)
})
rownames(baseFdataN2M)=paste0('subj',str_pad(1:N2, 2, pad = "0"))
sigmaM
colnames(baseFdataN2M)=paste0('M',c(1:M))
########## interaction matrix
betaMM=rep(0,M*M)
intind=c(223, 339,  39, 140, 342,
250, 102,  37, 314, 120,
111, 138, 320, 230, 332,
396, 370,  20,  10, 382)#sample(1:M^2,ineffpro*M*M,replace = F)
effectsize=c(0.188235605, 0.234132241, 0.41366703, 0.61070656, 0.10591708,
0.04580601, 0.82368206, 0.35504387, 1.23225201, 0.90013089,
0.06018784, 0.52154596, 0.99354102, 0.14859757, 0.105828898,
0.37905519, 0.08377116, 0.88736514, 0.70141201, 0.31951335)#10^rnorm(ineffpro*M*M,-.5,.5)
direction=c(1,  1,  1,  1,  1,
1, -1, -1,  1,  1,
-1, -1, -1, -1, -1,
-1, -1, -1,  1,  1)#sample(rep(c(1,-1),ineffpro*M*M/2),replace = F)
betaMM[intind]=effectsize*direction
betaMM=matrix(betaMM,ncol = M,dimnames = list(paste0('M',c(1:M)),paste0('M',c(1:M))))
paralist=list(baseFdataN2M=baseFdataN2M,conFdataN2L=conFdataN2L,timeN=timeN,
interceptM=interceptM,betaMM=betaMM,gammaLM=gammaLM,sigmaM=sigmaM,biN2M=biN2M)
sim.otu.tab=simMixTime(baseFdataN2M=paralist$baseFdataN2M,conFdataN2L=paralist$conFdataN2L,timeN=paralist$timeN,
interceptM=paralist$interceptM,betaMM=paralist$betaMM,gammaLM=paralist$gammaLM,
sigmaM=paralist$sigmaM,biN2M=paralist$biN2M)
fdata=cbind(sim.otu.tab[[1]],sim.otu.tab[[2]],subjid=sim.otu.tab[[3]])
# fdata.store=fdata
# fdata=fdata.store
Varname=colnames(sim.otu.tab[[1]])
Conname=colnames(sim.otu.tab[[2]])[-ncol(sim.otu.tab[[2]])]
IDname='subjid'
Tname='time'
resultZIP=tryCatch({
ARZIMM(Varname = Varname,Conname = Conname,fdata = fdata,IDname = IDname,Tname = Tname,bootpara=list(bootpval=F,nboot=500))
}, error = function(e) {
time
})
table(as.vector(resultZIP$nwtable!=0),as.vector(paralist$betaMM!=0))
resultZIP$nwtable
View(betaMM)
rowSums(betaMM)
colSums(betaMM)
rowSums(betaMM)+colSums(betaMM)
load(paste0(wpw,"/Data/BLsub50m20.RData"))
interceptM=interceptM-2
interceptM=interceptM-2
interceptM[c(4,5,8,9,15)]=NULL
load(paste0(wpw,"/Data/BLsub50m20.RData"))
interceptM=interceptM-2
interceptM[c(4,5,8,9,15)]=NULL
interceptM
interceptM=interceptM[-c(4,5,8,9,15)]
set.seed(seed)
########## Microbiome random effect sigma
sigmaM=10^((interceptM-9)/6-2)
########## individual random intercept
biN2M=sapply(sigmaM, function(x) rnorm(N2,0,x))
########## zero inflation
ziprop=1/(1+exp(-(cbind(1,conFdataN2L) %*% gammaLM)))
ziprop[,which(colSums(gammaLM)==0)]=0
uN2M=outer(1:N2,1:M,function(x,y) {
foo=function(x,y) rbinom(1,1,ziprop[x,y])
mapply(foo, x,y)
})
baseFdataN2M=outer(1:N2,1:M,function(x,y) {
foo=function(x,y) rpois(1,exp(interceptM[y]+biN2M[x,y]))*(1-uN2M[x,y])
mapply(foo, x, y)
})
sigmaM
biN2M
########## zero inflation
ziprop=1/(1+exp(-(cbind(1,conFdataN2L) %*% gammaLM)))
ziprop[,which(colSums(gammaLM)==0)]=0
M=15
uN2M=outer(1:N2,1:M,function(x,y) {
foo=function(x,y) rbinom(1,1,ziprop[x,y])
mapply(foo, x,y)
})
baseFdataN2M=outer(1:N2,1:M,function(x,y) {
foo=function(x,y) rpois(1,exp(interceptM[y]+biN2M[x,y]))*(1-uN2M[x,y])
mapply(foo, x, y)
})
rownames(baseFdataN2M)=paste0('subj',str_pad(1:N2, 2, pad = "0"))
colnames(baseFdataN2M)=paste0('M',c(1:M))
load(paste0(wpw,"/Data/BLsub50m20.RData"))
M=15
interceptM=interceptM-2
interceptM=interceptM[-c(4,5,8,9,15)]
set.seed(seed)
########## Microbiome random effect sigma
sigmaM=10^((interceptM-9)/6-2)
########## individual random intercept
biN2M=sapply(sigmaM, function(x) rnorm(N2,0,x))
########## zero inflation
ziprop=1/(1+exp(-(cbind(1,conFdataN2L) %*% gammaLM)))
ziprop[,which(colSums(gammaLM)==0)]=0
uN2M=outer(1:N2,1:M,function(x,y) {
foo=function(x,y) rbinom(1,1,ziprop[x,y])
mapply(foo, x,y)
})
baseFdataN2M=outer(1:N2,1:M,function(x,y) {
foo=function(x,y) rpois(1,exp(interceptM[y]+biN2M[x,y]))*(1-uN2M[x,y])
mapply(foo, x, y)
})
rownames(baseFdataN2M)=paste0('subj',str_pad(1:N2, 2, pad = "0"))
colnames(baseFdataN2M)=paste0('M',c(1:M))
########## interaction matrix
betaMM=rep(0,M*M)
########## interaction matrix
betaMM=rep(0,20*20)
intind=c(223, 339,  39, 140, 342,
250, 102,  37, 314, 120,
111, 138, 320, 230, 332,
396, 370,  20,  10, 382)#sample(1:M^2,ineffpro*M*M,replace = F)
effectsize=c(0.188235605, 0.234132241, 0.41366703, 0.61070656, 0.10591708,
0.04580601, 0.82368206, 0.35504387, 1.23225201, 0.90013089,
0.06018784, 0.52154596, 0.99354102, 0.14859757, 0.105828898,
0.37905519, 0.08377116, 0.88736514, 0.70141201, 0.31951335)#10^rnorm(ineffpro*M*M,-.5,.5)
direction=c(1,  1,  1,  1,  1,
1, -1, -1,  1,  1,
-1, -1, -1, -1, -1,
-1, -1, -1,  1,  1)#sample(rep(c(1,-1),ineffpro*M*M/2),replace = F)
betaMM[intind]=effectsize*direction
betaMM=matrix(betaMM,ncol = M,dimnames = list(paste0('M',c(1:M)),paste0('M',c(1:M))))
betaMM=matrix(betaMM,ncol = 20,dimnames = list(paste0('M',c(1:20)),paste0('M',c(1:20))))
betaMM=betaMM[-c(4,5,8,9,15),-c(4,5,8,9,15)]
paralist=list(baseFdataN2M=baseFdataN2M,conFdataN2L=conFdataN2L,timeN=timeN,
interceptM=interceptM,betaMM=betaMM,gammaLM=gammaLM,sigmaM=sigmaM,biN2M=biN2M)
sim.otu.tab=simMixTime(baseFdataN2M=paralist$baseFdataN2M,conFdataN2L=paralist$conFdataN2L,timeN=paralist$timeN,
interceptM=paralist$interceptM,betaMM=paralist$betaMM,gammaLM=paralist$gammaLM,
sigmaM=paralist$sigmaM,biN2M=paralist$biN2M)
fdata=cbind(sim.otu.tab[[1]],sim.otu.tab[[2]],subjid=sim.otu.tab[[3]])
# fdata.store=fdata
# fdata=fdata.store
Varname=colnames(sim.otu.tab[[1]])
Conname=colnames(sim.otu.tab[[2]])[-ncol(sim.otu.tab[[2]])]
IDname='subjid'
Tname='time'
resultZIP=tryCatch({
ARZIMM(Varname = Varname,Conname = Conname,fdata = fdata,IDname = IDname,Tname = Tname,bootpara=list(bootpval=F,nboot=500))
}, error = function(e) {
time
})
table(as.vector(resultZIP$nwtable!=0),as.vector(paralist$betaMM!=0))
43/380
43/(162+43)
resultZIP$tunlist$lambdabeta
ARZIMM=function(Varname=NA,Conname=NA,Covname=NA,fdata=NA,IDname='ID',Tname='Time',group=NA,family='Poisson',
initpara=list(betaini=NULL,gammaini=NULL,sigmaini=NULL,weight1all=NULL,weight2all=NULL,calini=T,iniw=F),
tunpara=list(lambdaseq1=NULL,lambdaseq2=NULL,ntun=50,epsilon = c(5e4,50)),
selectpara=list(selgamma=T,selcri='BIC',pen='adalasso'),
bootpara=list(bootpval=T,nboot=500))
{
# options(warn=-1)
start_time <- Sys.time()
cat("Program is running..be patient...")
##########################################################
################ reformat the data #######################
##########################################################
if(TRUE){
##### order fdata by time points and subjects
fdata[,Tname]=as.numeric(as.character(fdata[,Tname]));fdata=fdata[order(fdata[,IDname],fdata[,Tname]),]
##### define subjects' ID
ID=unique(fdata[,IDname])
##### define basic parameters
N2=length(unique(fdata[,IDname]));M=length(Varname);N=nrow(fdata)
if(!is.na(Conname[1])) {L=length(Conname)}else{L=0}
if(!is.na(Covname[1])) {q=length(Covname)}else{q=0}
#;tmax=max(fdata[,Tname])
###### get ind for x and y
indy=which(fdata[,Tname]!=0)
indx=match(paste0(fdata[indy,IDname],str_pad(fdata[indy,Tname]-1, 2, pad = "0")),
paste0(fdata[,IDname],str_pad(fdata[,Tname], 2, pad = "0")))
ind0=match(fdata[indy,IDname],fdata[which(fdata[,Tname]==0),IDname])
xFdataNM0=fdata[ind0,Varname]
####### define data as y, x, covariates and concomitant
yFdataNM=fdata[indy,Varname];  xFdataNM=fdata[indx,Varname]
if(is.na(Conname[1])){conFdataNL=NULL}else{conFdataNL=t(t(fdata[indx,Conname]))}
if(is.na(Covname[1])){covFdataNq=NULL}else{covFdataNq=t(t(fdata[indx,Covname]))}
conFdataNL=apply(conFdataNL,2,function(x) as.numeric(as.character(x)))
if(!is.na(Covname)) covFdataNq=apply(covFdataNq,2,function(x) as.numeric(as.character(x)))
####### log transformation x data
if (family=='Poisson') xFdataNM=log(xFdataNM+1)
if(!is.na(Covname[1])) {xFdataNMq=cbind(xFdataNM,covFdataNq)}else{xFdataNMq=xFdataNM}
####### define group variable for random effect
if(is.na(group[1])) group=match(fdata[indx,IDname],unique(fdata[,IDname]))
datalist=list(yFdataNM=yFdataNM,xFdataNM=xFdataNMq,conFdataNL=conFdataNL,group=group,xFdataNM0=xFdataNM0)
}
##########################################################
################ set initial value #######################
##########################################################
if(initpara$calini)  {
iniest=ARZIMM.initcal(datalist=datalist,family=family,iniw=initpara$iniw, selectpara=selectpara)
initpara=iniest$initpara;tunpara=iniest$tunpara
}
betainitMM=initpara$betaini;gammainitLM=initpara$gammaini;sigmainitM=initpara$sigmaini
weight1all=initpara$weight1all;weight2all=initpara$weight2all;iniw=initpara$iniw
lambdaseq1=tunpara$lambdaseq1;lambdaseq2=tunpara$lambdaseq2$lambda2;ntun=tunpara$ntun;epsilon=tunpara$epsilon
selgamma=selectpara$selgamma;selcri=selectpara$selcri;pen=selectpara$pen
bootpval=bootpara$bootpval;nboot=bootpara$nboot
################################################
################# penalty ######################
################################################
if(iniw) {  if(pen=='lasso') {weight1all=matrix(1,nrow = nrow(betainitMM),ncol = ncol(betainitMM))
weight2all=matrix(1,nrow = nrow(gammainitLM),ncol = ncol(gammainitLM))
} else if (pen=='adalasso') {weight1all=1/abs(betainitMM);weight2all=1/abs(gammainitLM)}
weight1all[weight1all == Inf] = weight2all[weight2all == Inf] = max(weight1all[weight1all != Inf])*1000
weight1all=weight1all[-1,];weight2all=weight2all[-1,]
weight1all[1,]=0
}
################################################
################## progress bar ################
################################################
result=c(NULL)
#start_time <- Sys.time()
for (m in 1:M) {
datam=list(yFdata=yFdataNM[,m],xFdata=cbind(T0=xFdataNM0[,m],xFdataNM),conFdata=conFdataNL,group=group)
param=list(betainit=betainitMM[,m],gammainit=gammainitLM[,m],sigmainit=sigmainitM[c(m,(m+M))])
weightm=list(w1=weight1all[,m],w2 = weight2all[,m])
# betaMntun=gammaLntun=sigmantun=bihatN2ntun=bivarN2ntun=convntun=NULL
restemp = emnr(data = datam, para = param,family=family, weight = weightm,selgamma=selgamma)#,Lm=Lm
result=c(result,list(restemp))
}
nwtable=beta=gamma=ciest=NULL;sigma=rep(0,2*M)
for (m in 1:M) {
nwtable=cbind(nwtable,result[[m]]$para$beta[3:(2+M)])
beta=cbind(beta,result[[m]]$para$beta)
gamma=cbind(gamma,result[[m]]$para$gamma)
sigma[c(m,m+M)]=result[[m]]$para$sigma
ciest=cbind(ciest,result[[m]]$ciestm$cihatN2)
}
rownames(nwtable)=colnames(nwtable)=colnames(beta)=names(sigma)[1:M]=names(sigma)[(M+1):(2*M)]=colnames(ciest)=Varname
rmseest=psmseest=NULL
for (m in 1:M) {
rmseest=c(rmseest,result[[m]]$mse[1])
psmseest=c(psmseest,result[[m]]$mse[2])
}
tunlist=list(lambdabeta=unlist(sapply(1:M,function(x) result[[x]]$lambda[1])),
lambdagamma=unlist(sapply(1:M,function(x) result[[x]]$lambda[2])),
weight1all=weight1all,weight2all=weight2all,selgamma=selgamma)
paralist=list(beta=beta,gamma=gamma,sigma=sigma,ciest=ciest)
if(bootpval){
parabootlist=paralist;tunbootlist=tunlist
# create progress bar
pb <- txtProgressBar(min = 0, max = nboot, style = 3)
bootres=NULL
for (boottime in 1:nboot){
set.seed(boottime)
yFdataNMboot=bootsim(datalist=datalist,paralist=parabootlist)
datalisttmp=datalist;datalisttmp$yFdataNM=yFdataNMboot
boottmp=bootest(datalist=datalisttmp,paralist=parabootlist,tunlist=tunbootlist)
bootres=rbind(bootres,boottmp)
setTxtProgressBar(pb, boottime)
}
################## progress bar
close(pb)
bootsd=apply(bootres, 2, function(x) sd(x))
pointest=c(as.vector(beta),as.vector(gamma),sigma)
chistat=unlist(sapply(1:length(pointest), function(x) ifelse(bootsd[x]==0,0,(pointest[x]/bootsd[x])^2)))
bootwtpval=pchisq(chistat,1,lower.tail = F)
bootparapval=list(betapval=matrix(bootwtpval[1:length(as.vector(beta))],ncol = M),
gammapval=matrix(bootwtpval[(1+length(as.vector(beta))):(length(as.vector(beta))+length(as.vector(gamma)))],ncol = M),
sigmapval=bootwtpval[(1+length(as.vector(beta))+length(as.vector(gamma))):length(bootwtpval)])
}else{bootparapval=NULL}
end_time <- Sys.time()
print(end_time - start_time)
################## return
return(list(nwtable=nwtable,mseest=list(rmseest,psmseest),paralist=list(beta=beta,gamma=gamma,sigma=sigma,ciest=ciest),
runtime=end_time - start_time,datalist=datalist,resultall=result,bootparapval=bootparapval,tunlist=tunlist,
parasetup=list(initpara=iniest$initpara,lambda=unlist(sapply(1:M,function(x) result[[x]]$lambda[1])),
tunpara=tunpara,selectpara=selectpara)))
}
library(ARZIMM)
resultZIP=tryCatch({
ARZIMM::ARZIMM(Varname = Varname,Conname = Conname,fdata = fdata,IDname = IDname,Tname = Tname,
tunpara=list(lambdaseq1=NULL,lambdaseq2=NULL,ntun=50,epsilon = c(5e4,50)),
bootpara=list(bootpval=F,nboot=500))
}, error = function(e) {
time
})
table(as.vector(resultZIP$nwtable!=0),as.vector(paralist$betaMM!=0))
paralist=myparaset(tmp,"C:/Users/lh1790/OneDrive - NYU Langone Health/Li/ARZIMM")
sim.otu.tab=simMixTime(baseFdataN2M=paralist$baseFdataN2M,conFdataN2L=paralist$conFdataN2L,timeN=paralist$timeN,
interceptM=paralist$interceptM,betaMM=paralist$betaMM,gammaLM=paralist$gammaLM,
sigmaM=paralist$sigmaM,biN2M=paralist$biN2M)
fdata=cbind(sim.otu.tab[[1]],sim.otu.tab[[2]],subjid=sim.otu.tab[[3]])
# fdata.store=fdata
# fdata=fdata.store
Varname=colnames(sim.otu.tab[[1]])
Conname=colnames(sim.otu.tab[[2]])[-ncol(sim.otu.tab[[2]])]
IDname='subjid'
Tname='time'
resultZIP=tryCatch({
ARZIMM::ARZIMM(Varname = Varname,Conname = Conname,fdata = fdata,IDname = IDname,Tname = Tname,
tunpara=list(lambdaseq1=NULL,lambdaseq2=NULL,ntun=50,epsilon = c(5e6,500)),
bootpara=list(bootpval=F,nboot=500))
}, error = function(e) {
time
})
table(as.vector(resultZIP$nwtable!=0),as.vector(paralist$betaMM!=0))
resultZIP=tryCatch({
ARZIMM::ARZIMM(Varname = Varname,Conname = Conname,fdata = fdata,IDname = IDname,Tname = Tname,
tunpara=list(lambdaseq1=NULL,lambdaseq2=NULL,ntun=50,epsilon = c(5e6,50000)),
bootpara=list(bootpval=F,nboot=500))
}, error = function(e) {
time
})
table(as.vector(resultZIP$nwtable!=0),as.vector(paralist$betaMM!=0))
resultZIP=tryCatch({
ARZIMM::ARZIMM(Varname = Varname,Conname = Conname,fdata = fdata,IDname = IDname,Tname = Tname,
tunpara=list(lambdaseq1=NULL,lambdaseq2=NULL,ntun=50,epsilon = c(5e3,5)),
bootpara=list(bootpval=F,nboot=500))
}, error = function(e) {
time
})
table(as.vector(resultZIP$nwtable!=0),as.vector(paralist$betaMM!=0))
resultZIP=tryCatch({
ARZIMM::ARZIMM(Varname = Varname,Conname = Conname,fdata = fdata,IDname = IDname,Tname = Tname,
tunpara=list(lambdaseq1=NULL,lambdaseq2=NULL,ntun=50,epsilon = c(50,5)),
bootpara=list(bootpval=F,nboot=500))
}, error = function(e) {
time
})
table(as.vector(resultZIP$nwtable!=0),as.vector(paralist$betaMM!=0))
resultZIP=tryCatch({
ARZIMM::ARZIMM(Varname = Varname,Conname = Conname,fdata = fdata,IDname = IDname,Tname = Tname,
tunpara=list(lambdaseq1=NULL,lambdaseq2=NULL,ntun=50,epsilon = c(50000000,500000)),
bootpara=list(bootpval=F,nboot=500))
}, error = function(e) {
time
})
table(as.vector(resultZIP$nwtable!=0),as.vector(paralist$betaMM!=0))
